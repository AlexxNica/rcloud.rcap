/// Stroke font-character
/// @param  {Integer} $stroke - Stroke width
/// @param  {Color}   $color  - Stroke color
/// @return {List}            - text-shadow list
@function stroke($stroke, $color) {
    $shadow: ();
    $from: $stroke*-1;
    @for $i from $from through $stroke {
        @for $j from $from through $stroke {
            $shadow: append($shadow, $i*1px $j*1px 0 $color, comma);
        }
    }
    @return $shadow;
}

/// Stroke font-character
/// @param  {Integer} $stroke - Stroke width
/// @param  {Color}   $color  - Stroke color
/// @return {Style}           - text-shadow
@mixin stroke($stroke, $color) {
    text-shadow: stroke($stroke, $color)!important;
}

@mixin noselect() {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin menuseparator() {
    padding-top: 21px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

@mixin cover() {
    margin: auto;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
}

@mixin background-opacity($color, $opacity: 0.3) {
    background: $color; /* The Fallback */
    background: rgba($color, $opacity);
}

$gridstack-columns: 24 !default;

@mixin grid-stack-items($gridstack-columns) {
    //.grid-stack.grid-stack-#{$gridstack-columns} {
    .grid-stack.grid-stack {

        > .grid-stack-item {
            min-width: 100% / $gridstack-columns;

            @for $i from 1 through $gridstack-columns {
                &[data-gs-width='#{$i}'] { width: (100% / $gridstack-columns) * $i; }
                &[data-gs-x='#{$i}'] { left: (100% / $gridstack-columns) * $i; }
                &[data-gs-min-width='#{$i}'] { min-width: (100% / $gridstack-columns) * $i; }
                &[data-gs-max-width='#{$i}'] { max-width: (100% / $gridstack-columns) * $i; }
            }
        }
    }
}

