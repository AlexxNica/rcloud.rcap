% Generated by roxygen2 (5.0.0.9000): do not edit by hand
% Please edit documentation in R/topo-sort.R
\name{topologicalSort}
\alias{topologicalSort}
\title{Topological sorting of a directed graph, represented by
adjacency lists. Graph vertices are represented by strings.}
\usage{
topologicalSort(adjlist)
}
\arguments{
\item{adjlist}{List of successors of all vertices.
Itmust be named, and the vertex names must be the vertices.}
}
\value{
The vertex ids, in topologically sorted order. I.e.
if v2 comes after v1 in the list, then there must not be an
edge from v2 to v1.
}
\description{
It uses Taarjan's depth-first search algorithm, see
https://en.wikipedia.org/wiki/Topological_sorting#Tarjan.27s_algorithm
}
\details{
\preformatted{
L <- Empty list that will contain the sorted nodes
while there are unmarked nodes do
select an unmarked node n
visit(n)

function visit(node n)
if n has a temporary mark then stop (not a DAG)
if n is not marked (i.e. has not been visited yet) then
mark n temporarily
for each node m with an edge from n to m do
visit(m)
mark n permanently
unmark n temporarily
add n to head of L
}
}

